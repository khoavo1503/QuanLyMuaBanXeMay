/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import component.CustomConfirmDialog;
import component.CustomMessageDialog;
import dao.LoaiSanPhamDAO;
import dao.SanPhamDAO;
import entity.LoaiXe;
import entity.Xe;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author acer
 */
public class SanPham_GUI extends javax.swing.JPanel implements MouseListener {

    private DefaultTableModel modelSanPham;
    private SanPhamDAO sanPham_DAO;
    private LoaiSanPhamDAO loaiSP_DAO;
    private GDDangNhap gdDangNhap;
    private DecimalFormat df;

    /**
     * Creates new form jpnSanPham
     */
    public SanPham_GUI() throws SQLException {
        initComponents();

        String[] header_SPXe = {"Mã xe", "Tên xe", "Màu xe", "Nước sản xuất", "Hãng xe", "Giá xe", "Số khung", "Phân khối", "Số lượng", "Loại xe"};
        modelSanPham = new DefaultTableModel(header_SPXe, 0);
        tableSanPham.setModel(modelSanPham);

        loadDSSanPhamXeLenUI();

        gdDangNhap = new GDDangNhap();
        lblTenNhanVien.setText(GDDangNhap.tenNV);
        lblChucVu.setText(GDDangNhap.chucVuNV);

        tableSanPham.addMouseListener(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTenNhanVien = new javax.swing.JLabel();
        lblChucVu = new javax.swing.JLabel();
        jpnThongTinXe = new javax.swing.JPanel();
        lblMaXe = new javax.swing.JLabel();
        txtMaXe = new javax.swing.JTextField();
        lblTenXe = new javax.swing.JLabel();
        txtTenXe = new javax.swing.JTextField();
        llblMauXe = new javax.swing.JLabel();
        lblNSX = new javax.swing.JLabel();
        lblHangXe = new javax.swing.JLabel();
        txtMauXe = new javax.swing.JTextField();
        txtNSX = new javax.swing.JTextField();
        txtHangXe = new javax.swing.JTextField();
        lblLoaiXe = new javax.swing.JLabel();
        lblSoKhung = new javax.swing.JLabel();
        lblPhanKhoi = new javax.swing.JLabel();
        lblGiaXe = new javax.swing.JLabel();
        cbxLoaiXe = new javax.swing.JComboBox<>();
        txtSoKhung = new javax.swing.JTextField();
        txtPhanKhoi = new javax.swing.JTextField();
        txtGiaXe = new javax.swing.JTextField();
        lblSoLuong = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jscrSanPham = new javax.swing.JScrollPane();
        tableSanPham = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnNhapLai = new javax.swing.JButton();
        btnTim = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cbxTimXe = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 204, 204));
        setPreferredSize(new java.awt.Dimension(961, 800));

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(961, 730));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(204, 204, 204)));
        jPanel2.setPreferredSize(new java.awt.Dimension(394, 70));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THÔNG TIN SẢN PHẨM");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/employee_32px.png"))); // NOI18N

        lblTenNhanVien.setText("Tên nhân viên");

        lblChucVu.setText("Chức vụ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTenNhanVien)
                    .addComponent(lblChucVu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblTenNhanVien)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblChucVu)
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jpnThongTinXe.setBackground(new java.awt.Color(255, 204, 204));

        lblMaXe.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblMaXe.setText("Mã xe:");
        lblMaXe.setPreferredSize(new java.awt.Dimension(125, 30));

        txtMaXe.setEditable(false);
        txtMaXe.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtMaXe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));

        lblTenXe.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblTenXe.setText("Tên xe:");
        lblTenXe.setPreferredSize(new java.awt.Dimension(125, 30));

        txtTenXe.setEditable(false);
        txtTenXe.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtTenXe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        llblMauXe.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        llblMauXe.setText("Màu xe:");
        llblMauXe.setPreferredSize(new java.awt.Dimension(125, 30));

        lblNSX.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblNSX.setText("Nuớc sản xuất:");
        lblNSX.setPreferredSize(new java.awt.Dimension(125, 30));

        lblHangXe.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblHangXe.setText("Hãng xe:");
        lblHangXe.setPreferredSize(new java.awt.Dimension(125, 30));

        txtMauXe.setEditable(false);
        txtMauXe.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtMauXe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        txtNSX.setEditable(false);
        txtNSX.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtNSX.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        txtHangXe.setEditable(false);
        txtHangXe.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtHangXe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        lblLoaiXe.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblLoaiXe.setText("Loại xe:");

        lblSoKhung.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblSoKhung.setText("Số khung:");

        lblPhanKhoi.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblPhanKhoi.setText("Phân khối:");

        lblGiaXe.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblGiaXe.setText("Giá xe:");

        cbxLoaiXe.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        cbxLoaiXe.setPreferredSize(new java.awt.Dimension(125, 30));

        txtSoKhung.setEditable(false);
        txtSoKhung.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtSoKhung.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        txtSoKhung.setPreferredSize(new java.awt.Dimension(130, 30));

        txtPhanKhoi.setEditable(false);
        txtPhanKhoi.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtPhanKhoi.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        txtGiaXe.setEditable(false);
        txtGiaXe.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtGiaXe.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        txtGiaXe.setPreferredSize(new java.awt.Dimension(130, 30));

        lblSoLuong.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        lblSoLuong.setText("Số lượng:");

        txtSoLuong.setEditable(false);
        txtSoLuong.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtSoLuong.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));

        jscrSanPham.setBackground(new java.awt.Color(255, 204, 204));
        jscrSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách xe", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 16))); // NOI18N
        jscrSanPham.setForeground(new java.awt.Color(255, 255, 0));
        jscrSanPham.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        tableSanPham.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tableSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã xe", "Tên xe", "Màu xe", "Nước sản xuất", "Hãng xe", "Giá xe", "Số khung", "Phân khối", "Số lượng", "Loại xe"
            }
        ));
        tableSanPham.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableSanPham.setRowHeight(30);
        jscrSanPham.setViewportView(tableSanPham);

        btnThem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 51, 0));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nhaphang_20px.jpg"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 51, 0));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/suaTT_20px.jpg"))); // NOI18N
        btnSua.setText("Sửa thông tin");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 51, 0));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/xoa_20px.jpg"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnNhapLai.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnNhapLai.setForeground(new java.awt.Color(255, 51, 0));
        btnNhapLai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nhaplai_20px.jpg"))); // NOI18N
        btnNhapLai.setText("Nhập lại");
        btnNhapLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapLaiActionPerformed(evt);
            }
        });

        btnTim.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnTim.setForeground(new java.awt.Color(255, 51, 0));
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/timKiem_20px.jpg"))); // NOI18N
        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnLuu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnLuu.setForeground(new java.awt.Color(255, 51, 0));
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/luu_20px.jpg"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.setEnabled(false);
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Chọn mã xe cần tìm:");

        cbxTimXe.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        javax.swing.GroupLayout jpnThongTinXeLayout = new javax.swing.GroupLayout(jpnThongTinXe);
        jpnThongTinXe.setLayout(jpnThongTinXeLayout);
        jpnThongTinXeLayout.setHorizontalGroup(
            jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jscrSanPham)
            .addGroup(jpnThongTinXeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnThongTinXeLayout.createSequentialGroup()
                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpnThongTinXeLayout.createSequentialGroup()
                                .addComponent(lblHangXe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHangXe, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpnThongTinXeLayout.createSequentialGroup()
                                .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnThongTinXeLayout.createSequentialGroup()
                                        .addComponent(lblNSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNSX, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jpnThongTinXeLayout.createSequentialGroup()
                                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(llblMauXe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblTenXe, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblMaXe, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTenXe, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtMauXe, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtMaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblLoaiXe, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSoKhung, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPhanKhoi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGiaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSoKhung, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                    .addComponent(txtPhanKhoi, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtGiaXe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(txtSoLuong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbxLoaiXe, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpnThongTinXeLayout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(18, 18, 18)
                        .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa)
                        .addGap(19, 19, 19)
                        .addComponent(btnNhapLai)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnThongTinXeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxTimXe, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(198, 198, 198))
        );
        jpnThongTinXeLayout.setVerticalGroup(
            jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnThongTinXeLayout.createSequentialGroup()
                .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnThongTinXeLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenXe)
                            .addComponent(lblTenXe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(llblMauXe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMauXe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNSX, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGiaXe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNSX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnThongTinXeLayout.createSequentialGroup()
                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpnThongTinXeLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(lblSoKhung, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnThongTinXeLayout.createSequentialGroup()
                                .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbxLoaiXe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblLoaiXe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSoKhung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhanKhoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhanKhoi, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtGiaXe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addGap(21, 21, 21)
                .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHangXe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHangXe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNhapLai, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnThongTinXeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cbxTimXe, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jscrSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnThongTinXe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnThongTinXe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnThem)) {
            if (btnThem.getText().equals("Thêm")) {
                nhapLai();
                txtMaXe.setEditable(true);
                txtTenXe.setEditable(true);
                txtMauXe.setEditable(true);
                txtNSX.setEditable(true);
                txtHangXe.setEditable(true);
                txtGiaXe.setEditable(true);
                txtSoKhung.setEditable(true);
                txtPhanKhoi.setEditable(true);
                txtSoLuong.setEditable(true);

                txtMaXe.requestFocus();
                btnThem.setText("Hủy");
                btnThem.setIcon(new ImageIcon(getClass().getResource("/images/huy_20px.png")));
                btnSua.setEnabled(false);
                btnXoa.setEnabled(false);
                btnLuu.setEnabled(true);
            } else {
                txtMaXe.setEditable(false);
                txtTenXe.setEditable(false);
                txtMauXe.setEditable(false);
                txtNSX.setEditable(false);
                txtHangXe.setEditable(false);
                txtGiaXe.setEditable(false);
                txtSoKhung.setEditable(false);
                txtPhanKhoi.setEditable(false);
                txtSoLuong.setEditable(false);

                btnThem.setText("Thêm");
                btnThem.setIcon(new ImageIcon(getClass().getResource("/images/nhaphang_20px.jpg")));
                btnSua.setEnabled(true);
                btnXoa.setEnabled(true);
                btnLuu.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnTim)) {
            if (cbxTimXe.getSelectedItem().equals("Tất cả")) {
                try {
                    modelSanPham.getDataVector().removeAllElements();
                    loadDSSanPhamXeLenUI();
                    tableSanPham.setModel(modelSanPham);
                } catch (SQLException ex) {
                    Logger.getLogger(SanPham_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    String maXe = (String) cbxTimXe.getSelectedItem();
                    for (Xe xe : sanPham_DAO.getSanPhamXeByMaXe(maXe)) {
                        modelSanPham.getDataVector().removeAllElements();
                        modelSanPham.addRow(new Object[]{
                            xe.getMaXe(), xe.getTenXe(), xe.getMauXe(), xe.getNuocSanXuat(), xe.getHangXe(), df.format(xe.getGiaXe()), xe.getSoKhung(), xe.getPhanKhoi(),
                            xe.getSoLuong(), xe.getLoaiXe().getMaLoaiXe()
                        });
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(SanPham_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        CustomConfirmDialog xacNhanXoa = new CustomConfirmDialog(gdDangNhap);
        CustomMessageDialog xoaThanhCong = new CustomMessageDialog(gdDangNhap);
        Object o = evt.getSource();
        if (o.equals(btnXoa)) {
            int r = tableSanPham.getSelectedRow();
            if (r != -1) {
                xacNhanXoa.showMessage("Cành báo xóa", "Bạn có chắc muốn xóa xe này không?");
                String maXe = modelSanPham.getValueAt(r, 0).toString();
                if (xacNhanXoa.getMessageType() == CustomConfirmDialog.MessageType.OK) {
                    try {

                        sanPham_DAO.deleteXe(maXe);
                        modelSanPham.removeRow(r);
                        nhapLai();

                        xoaThanhCong.showMessage("XÓa xe thành công", "Chúc bạn một ngày tốt lành");
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                } else {
                    xoaThanhCong.showMessage("Xóa xe không thành công", "Chúc bạn một ngày tốt lành");
                }
            } else {
                xoaThanhCong.showMessage("Chọn xe cần xóa", "Bạn vui lòng chọn xe cần xóa nhé!");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnNhapLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapLaiActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnNhapLai)) {
            nhapLai();
        }
    }//GEN-LAST:event_btnNhapLaiActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnSua)) {
            try {
                suaTTXe();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        CustomMessageDialog canhBaoThemXe = new CustomMessageDialog(gdDangNhap);
        Object o = evt.getSource();
        if (o.equals(btnLuu)) {
            if (txtMaXe.getText().equals("") || txtTenXe.getText().equals("") || txtMauXe.getText().equals("") || txtNSX.getText().equals("")
                    || txtHangXe.getText().equals("") || txtGiaXe.getText().equals("") || txtSoKhung.getText().equals("") || txtPhanKhoi.getText().equals("")
                    || txtSoLuong.getText().equals("") || cbxLoaiXe.getSelectedItem().equals("Chọn loại xe")) {
                canhBaoThemXe.showMessage("Không bỏ trống dữ liệu", "Vui lòng nhập đầy đủ thông tin");
                return;
            } else if (validDataThemXe()) {
                int r = tableSanPham.getSelectedRow();
                String maXe = txtMaXe.getText();
                String tenXe = txtTenXe.getText();
                String mauXe = txtMauXe.getText();
                String nuocSanXuat = txtNSX.getText();
                String hangXe = txtHangXe.getText();
                double giaBan = Double.parseDouble(txtGiaXe.getText());
                String loaiXe = cbxLoaiXe.getSelectedItem().toString();
                LoaiXe lXe = new LoaiXe(loaiXe);
                String soKhung = txtSoKhung.getText();
                String phanKhoi = txtPhanKhoi.getText();
                int soLuong = Integer.parseInt(txtSoLuong.getText());

                Xe xe = new Xe(maXe, tenXe, mauXe, nuocSanXuat, hangXe, giaBan, soKhung, phanKhoi, soLuong, lXe);
                try {
                    if (sanPham_DAO.getSanPhamXeByMaXe(maXe) != null && !sanPham_DAO.getSanPhamXeByMaXe(maXe).isEmpty()) {
                        canhBaoThemXe.showMessage("Cảnh báo trùng mã xe", "Mã xe bị trùng, vui lòng nhập lại");
                        txtMaXe.selectAll();
                        txtMaXe.requestFocus();
                    } else {
                        sanPham_DAO.createXe(xe);
                        modelSanPham.addRow(new Object[]{
                            xe.getMaXe(), xe.getTenXe(), xe.getMauXe(), xe.getNuocSanXuat(), xe.getHangXe(), df.format(xe.getGiaXe()), xe.getSoKhung(), xe.getPhanKhoi(),
                            xe.getSoLuong(), xe.getLoaiXe().getMaLoaiXe()
                        });
                        canhBaoThemXe.showMessage("Thêm xe thành công", "Chúc bạn một ngày tốt lành");
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }

            }

        }
    }//GEN-LAST:event_btnLuuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnNhapLai;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbxLoaiXe;
    private javax.swing.JComboBox<String> cbxTimXe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jpnThongTinXe;
    private javax.swing.JScrollPane jscrSanPham;
    private javax.swing.JLabel lblChucVu;
    private javax.swing.JLabel lblGiaXe;
    private javax.swing.JLabel lblHangXe;
    private javax.swing.JLabel lblLoaiXe;
    private javax.swing.JLabel lblMaXe;
    private javax.swing.JLabel lblNSX;
    private javax.swing.JLabel lblPhanKhoi;
    private javax.swing.JLabel lblSoKhung;
    private javax.swing.JLabel lblSoLuong;
    private javax.swing.JLabel lblTenNhanVien;
    private javax.swing.JLabel lblTenXe;
    private javax.swing.JLabel llblMauXe;
    private javax.swing.JTable tableSanPham;
    private javax.swing.JTextField txtGiaXe;
    private javax.swing.JTextField txtHangXe;
    private javax.swing.JTextField txtMaXe;
    private javax.swing.JTextField txtMauXe;
    private javax.swing.JTextField txtNSX;
    private javax.swing.JTextField txtPhanKhoi;
    private javax.swing.JTextField txtSoKhung;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenXe;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        int row = tableSanPham.getSelectedRow();
        txtMaXe.setText(modelSanPham.getValueAt(row, 0).toString());
        txtTenXe.setText(modelSanPham.getValueAt(row, 1).toString());
        txtMauXe.setText(modelSanPham.getValueAt(row, 2).toString());
        txtNSX.setText(modelSanPham.getValueAt(row, 3).toString());
        txtHangXe.setText(modelSanPham.getValueAt(row, 4).toString());
        txtGiaXe.setText(modelSanPham.getValueAt(row, 5).toString());
        txtSoKhung.setText(modelSanPham.getValueAt(row, 6).toString());
        txtPhanKhoi.setText(modelSanPham.getValueAt(row, 7).toString());
        txtSoLuong.setText(modelSanPham.getValueAt(row, 8).toString());
        cbxLoaiXe.setSelectedItem(modelSanPham.getValueAt(row, 9).toString());

    }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    private void loadDSSanPhamXeLenUI() throws SQLException {
        loaiSP_DAO = new LoaiSanPhamDAO();
        ArrayList<LoaiXe> dsLoaiXe = loaiSP_DAO.getAllLoaiSanPham();
        cbxLoaiXe.addItem("Chọn loại xe");
        for (LoaiXe loaiXe : dsLoaiXe) {
            cbxLoaiXe.addItem(loaiXe.getMaLoaiXe());
        }

        sanPham_DAO = new SanPhamDAO();
        cbxTimXe.addItem("Tất cả");
        ArrayList<Xe> dsXe = sanPham_DAO.getAllSanPham();
        for (Xe xe : dsXe) {
            df = new DecimalFormat("###.##");
            modelSanPham.addRow(new Object[]{
                xe.getMaXe(), xe.getTenXe(), xe.getMauXe(), xe.getNuocSanXuat(), xe.getHangXe(), df.format(xe.getGiaXe()), xe.getSoKhung(), xe.getPhanKhoi(),
                xe.getSoLuong(), xe.getLoaiXe().getMaLoaiXe()
            });
            cbxTimXe.addItem(xe.getMaXe());
        }
    }

    public void nhapLai() {
        txtMaXe.setText("");
        txtTenXe.setText("");
        txtMauXe.setText("");
        txtNSX.setText("");
        txtHangXe.setText("");
        txtGiaXe.setText("");
        txtSoKhung.setText("");
        txtPhanKhoi.setText("");
        txtSoLuong.setText("");
        cbxLoaiXe.setSelectedItem("Chọn loại xe");

        txtMaXe.requestFocus();
    }

    private void suaTTXe() throws SQLException {
        int r = tableSanPham.getSelectedRow();
        CustomConfirmDialog xacNhanSua = new CustomConfirmDialog(gdDangNhap);
        CustomMessageDialog suaThanhCong = new CustomMessageDialog(gdDangNhap);

        if (r == -1) {
            suaThanhCong.showMessage("Chọn xe cần sửa", "Vui lòng chọn xe cần sửa thông tin bạn nhé!");
        } else {
            xacNhanSua.showMessage("Xác nhận sửa thông tin xe", "Bạn có chắc sửa thông tin xe này không?");

            if (xacNhanSua.getMessageType() == CustomConfirmDialog.MessageType.OK) {
                if (btnSua.getText().equals("Sửa thông tin")) {
                    txtTenXe.setEditable(true);
                    txtMauXe.setEditable(true);
                    txtNSX.setEditable(true);
                    txtHangXe.setEditable(true);
                    txtGiaXe.setEditable(true);
                    txtSoKhung.setEditable(true);
                    txtPhanKhoi.setEditable(true);
                    txtSoLuong.setEditable(true);

                    txtMaXe.requestFocus();

                    tableSanPham.setEnabled(false);
                    btnXoa.setEnabled(false);
                    btnThem.setEnabled(false);
                    btnSua.setText("Hoàn Tất");

                } else if (validDataThemXe()) {
                    String maXe = txtMaXe.getText();
                    String tenXe = txtTenXe.getText();
                    String mauXe = txtMauXe.getText();
                    String nuocSanXuat = txtNSX.getText();
                    String hangXe = txtHangXe.getText();
                    double giaBan = Double.parseDouble(txtGiaXe.getText());
                    String loaiXe = cbxLoaiXe.getSelectedItem().toString();
                    LoaiXe lXe = new LoaiXe(loaiXe);
                    String soKhung = txtSoKhung.getText();
                    String phanKhoi = txtPhanKhoi.getText();
                    int soLuong = Integer.parseInt(txtSoLuong.getText());

                    Xe xe = new Xe(maXe, tenXe, mauXe, nuocSanXuat, hangXe, giaBan, soKhung, phanKhoi, soLuong, lXe);

                    txtTenXe.setEditable(false);
                    txtMauXe.setEditable(false);
                    txtNSX.setEditable(false);
                    txtHangXe.setEditable(false);
                    txtGiaXe.setEditable(false);
                    txtSoKhung.setEditable(false);
                    txtPhanKhoi.setEditable(false);
                    txtSoLuong.setEditable(false);

                    btnSua.setText("Sửa thông tin");
                    tableSanPham.setEnabled(true);
                    btnXoa.setEnabled(true);
                    btnThem.setEnabled(true);
                    modelSanPham.removeRow(r);
                    sanPham_DAO.updateXe(xe);
                    modelSanPham.addRow(new Object[]{
                        xe.getMaXe(), xe.getTenXe(), xe.getMauXe(), xe.getNuocSanXuat(), xe.getHangXe(), df.format(xe.getGiaXe()), xe.getSoKhung(), xe.getPhanKhoi(),
                        xe.getSoLuong(), xe.getLoaiXe().getMaLoaiXe()
                    });
                    suaThanhCong.showMessage("Sửa thông tin xe thành công", "Chúc bạn một ngày tốt lành!");
                    nhapLai();

                }
            } else {
                suaThanhCong.showMessage("Sửa thông tin xe không thành công", "Chúc bạn một ngày tốt lành!");
            }
        }
    }

//    Kiểm tra dữ liệu nhập vào của xe
    public boolean validDataThemXe() {
        CustomMessageDialog canhBaoNhapLieu = new CustomMessageDialog(gdDangNhap);
        
        String maXe = txtMaXe.getText().trim();
        String tenXe = txtTenXe.getText().trim();
//        String mauXe = txtMauXe.getText().trim();
        String nuocSanXuat = txtNSX.getText().trim();
        String hangXe = txtHangXe.getText().trim();
        String loaiXe = cbxLoaiXe.getSelectedItem().toString();
        String giaBan = txtGiaXe.getText().trim();
        String soKhung = txtSoKhung.getText().trim();
        String phanKhoi = txtPhanKhoi.getText().trim();
        String soLuong = txtSoLuong.getText().trim();

        if (!(maXe.length() > 0 && maXe.matches("^[A-Z]{2}[0-9]{4}$"))) {
            canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Cú pháp mã xe: XX + 4 số. \nTrong đó, X đại diện cho kí tự in hoa.");
            txtMaXe.requestFocus();
            txtMaXe.selectAll();
            return false;
        }

        if (!(tenXe.length() > 0 && tenXe.matches("^[A-Z0-9][A-Za-z0-9]+(\\s[A-Z0-9][A-Za-z0-9]*)*\\s[0-9]{4}$"))) {
            canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Cú pháp đặt tên xe: Viết hoa chữ cái đầu tiên của mỗi từ, có khoảng trắng giữa mỗi từ, sau cùng là 4 số đại diện cho năm sản xuất.");
            txtTenXe.requestFocus();
            return false;
        }

//        if (!(mauXe.length() > 0 && mauXe.matches("Màu\\s[a-z ]+"))) {
//             canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Màu xe theo kiểu: Màu + 'khoảng trắng' + <tên màu>");
//            txtMauXe.requestFocus();
//            return false;
//        }
        if (!(nuocSanXuat.length() > 0) && nuocSanXuat.matches("^[A-Z][A-Za-z]+(\\s[A-Z][A-Za-z]*)*$")) {
            canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Cú pháp tên nước sản xuất: Viết hoa chữ cái đầu tiên.");
            txtNSX.requestFocus();
            return false;
        }

        if (!(hangXe.length() > 0 && hangXe.matches("^[A-Z][A-Za-z]+(\\s[A-Z][A-Za-z]*)*$"))) {
            canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Cú pháp tên hãng xe: Viết hoa chữ cái đầu tiên");
            txtHangXe.requestFocus();
            return false;
        }

//        if (loaiXe.equals("Chọn loại xe")){
//            JOptionPane.showMessageDialog(null, "Vui lòng chọn loại xe");
//            cbxLoaiXe.requestFocus();
//            return false;
//        }
        if (giaBan.length() > 0) {
            try {
                double giaXe = Double.parseDouble(giaBan);
                if (giaXe < 0 || giaXe > 999999999) {
                    canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Giá xe quá lớn");
                    txtGiaXe.requestFocus();
                    txtGiaXe.selectAll();
                    return false;
                }
            } catch (Exception e) {
                canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Giá xe là một số dương.");
                txtGiaXe.requestFocus();
                txtGiaXe.selectAll();
                return false;
            }
        }

        if (!(soKhung.length() > 0 && soKhung.matches("[A-Z0-9]{1}[A-Z]{1}\\d{1}[A-Z0-9]{5}\\d{1}[A-Z]{1}\\d{1}\\d{6}"))) {
            canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Số khung xe gồm 17 kí tự:"
                    + " \n1. Nước sản xuất (1 kí tự in hoa hoặc kí số),"
                    + " \n2. Hãng sản xuất (1 kí tự in hoa),"
                    + " \n3. Nhà máy sản xuất (1 kí số),"
                    + " \n4-8. Thông số xe (5 kí tự in hoa và kí số),"
                    + " \n9. Mã bảo mật (1 kí tự số),"
                    + " \n10. Năm sản xuất (1 kí tự in hoa),"
                    + " \n11. Nhà máy lắp ráp (1 kí số),"
                    + " \n12-17. STT sản xuất xe(6 kí số)");
            txtSoKhung.requestFocus();
            txtSoKhung.selectAll();
            return false;
        }

        if (!(phanKhoi.length() > 0) && phanKhoi.matches("[0-9]{2,4}(cc)")) {
            canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Phân khối xe theo mẫu: <số phân khối> + cc");
            txtPhanKhoi.requestFocus();
            txtPhanKhoi.selectAll();
            return false;
        }

        if (soLuong.length() > 0) {
            try {
                int soLuongXe = Integer.parseInt(soLuong);
                if (soLuongXe < 0 || soLuongXe > 999) {
                    canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Số lượng xe nhập vào quá lớn!");
                    txtSoLuong.requestFocus();
                    return false;
                }
            } catch (Exception e) {
                canhBaoNhapLieu.showMessage("Cảnh báo nhập liệu", "Số lượng xe phải là một số dương.");
                txtSoLuong.requestFocus();
                return false;
            }
        }
        return true;
    }

}
