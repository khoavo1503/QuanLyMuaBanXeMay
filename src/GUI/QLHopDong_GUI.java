/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import component.CustomConfirmDialog;
import component.CustomMessageDialog;
import dao.HoaDonDAO;
import dao.HopDongDAO;
import dao.KhachHangDAO;
import dao.NhanVienDAO;
import dao.SanPhamDAO;
import entity.ChiTietHopDong;
import entity.HoaDon;
import entity.HopDong;
import entity.KhachHang;
import entity.NhanVien;
import entity.Xe;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class QLHopDong_GUI extends javax.swing.JPanel {

    private GDDangNhap gdDangNhap;
    private HopDongDAO hopDong_DAO;
    private HoaDonDAO hoaDon_DAO;
    private final DefaultTableModel modelHopDong;
    private DecimalFormat df;

    /**
     * Creates new form jpnHopDongMuaBan
     */
    public QLHopDong_GUI() throws SQLException {
        initComponents();

        gdDangNhap = new GDDangNhap();
        lblTenNhanVien.setText(GDDangNhap.tenNV);
        lblChucVu.setText(GDDangNhap.chucVuNV);

        df = new DecimalFormat();

        String[] header_HopDong = {"Mã hợp đồng", "Ngày lập", "Thời hạn bảo hành",
            "Tiền phải thanh toán", "Tiền đã thanh toán", "Số lần TT còn lại", "Mã KH", "Mã nhân viên", "Mã xe"};
        modelHopDong = new DefaultTableModel(header_HopDong, 0);
        tableHopDong.setModel(modelHopDong);

        loadDSHopDongLenUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTenNhanVien = new javax.swing.JLabel();
        lblChucVu = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHopDong = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnThanhToan = new javax.swing.JButton();
        btnXoaHopDong = new javax.swing.JButton();
        lblTim = new javax.swing.JLabel();
        cbxTim = new javax.swing.JComboBox<>();
        btnTim = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));
        setPreferredSize(new java.awt.Dimension(970, 730));

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(970, 730));

        jPanel3.setBackground(new java.awt.Color(255, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(204, 204, 204)));
        jPanel3.setPreferredSize(new java.awt.Dimension(335, 70));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 51, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÍ HỢP ĐỒNG");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/employee_32px.png"))); // NOI18N

        lblTenNhanVien.setText("Tên nhân viên");

        lblChucVu.setText("Chức vụ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblChucVu))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblTenNhanVien)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblChucVu)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tableHopDong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tableHopDong.setForeground(new java.awt.Color(255, 102, 0));
        tableHopDong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hợp đồng", "Ngày lập", "Thời hạn bảo hành", "Tiền phải thanh toán", "Tiền đã thanh toán", "Số lần TT còn lại", "Mã KH", "Mã nhân viên", "Mã xe"
            }
        ));
        tableHopDong.setRowHeight(30);
        tableHopDong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHopDongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableHopDong);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        btnThanhToan.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(255, 51, 0));
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnXoaHopDong.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnXoaHopDong.setForeground(new java.awt.Color(255, 51, 0));
        btnXoaHopDong.setText("Xóa hợp đồng");
        btnXoaHopDong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHopDongActionPerformed(evt);
            }
        });

        lblTim.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        lblTim.setText("Chọn mã hợp đồng cần tìm:");

        cbxTim.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        btnTim.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/timKiem_20px.jpg"))); // NOI18N
        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnThanhToan)
                .addGap(18, 18, 18)
                .addComponent(btnXoaHopDong)
                .addGap(88, 88, 88)
                .addComponent(lblTim)
                .addGap(18, 18, 18)
                .addComponent(cbxTim, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTim)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaHopDong, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxTim, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(187, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaHopDongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHopDongActionPerformed
        CustomConfirmDialog xacNhanXoaHopDong = new CustomConfirmDialog(gdDangNhap);
        CustomMessageDialog thongBaoXoaHopDong = new CustomMessageDialog(gdDangNhap);

        Object o = evt.getSource();
        if (o.equals(btnXoaHopDong)) {
            int row = tableHopDong.getSelectedRow();
            if (row != -1) {
                String maHopDong = modelHopDong.getValueAt(row, 0).toString();
                xacNhanXoaHopDong.showMessage("Xác nhận xóa hợp đồng", String.format("Bạn có chắc muốn xóa hợp đồng %s không?", maHopDong));
                if (xacNhanXoaHopDong.getMessageType() == CustomConfirmDialog.MessageType.OK) {
                    try {
                        hopDong_DAO.xoaHopDong(maHopDong);
                        modelHopDong.removeRow(row);
                        thongBaoXoaHopDong.showMessage("Thông báo xóa thành công", String.format("Hợp đồng %s đã được xóa khỏi danh sách hợp dồng,\n Vui lòng kiểm tra lại.", maHopDong));
                    } catch (SQLException ex) {
                        Logger.getLogger(QLHopDong_GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    thongBaoXoaHopDong.showMessage("Thông báo xóa thất bại", String.format("Xóa hợp đồng %s thất bại, \nVui lòng thao tác lại.", maHopDong));
                }
            } else {
                thongBaoXoaHopDong.showMessage("Thông báo chưa chọn hợp đồng", "Có vẻ bạn vẫn chưa chọn hợp đồng muốn xóa.");
            }
        }
    }//GEN-LAST:event_btnXoaHopDongActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        CustomConfirmDialog xacNhanThanhToan = new CustomConfirmDialog(gdDangNhap);
        CustomMessageDialog thongBaoThanhToan = new CustomMessageDialog(gdDangNhap);

        Object o = evt.getSource();
        if (o.equals(btnThanhToan)) {
            int row = tableHopDong.getSelectedRow();
            if (row != -1) {
                String maHopDong = modelHopDong.getValueAt(row, 0).toString();
                xacNhanThanhToan.showMessage("Xác nhận thanh toán hợp đồng", String.format("Bạn có chắc muốn thanh toán\n hợp đồng %s không?", maHopDong));
                if (xacNhanThanhToan.getMessageType() == CustomConfirmDialog.MessageType.OK) {
                    try {
                        LocalDateTime ngayLapHoaDon = LocalDateTime.now();
                        double tongTien = 0;
                        for (HopDong hopDong : hopDong_DAO.getHopDongByMaHopDong(maHopDong)) {
                            tongTien = hopDong.getSoTienPhaiTT();
                        }
                        String nguoiNhan = "Công ty TNHH VinaBike";
                        NhanVien nv = new NhanVien(GDDangNhap.maNV);
                        HopDong hopDong = new HopDong(maHopDong);

                        HoaDon hoaDon = new HoaDon(0, ngayLapHoaDon, tongTien, nguoiNhan, hopDong, nv);
                        hoaDon_DAO = new HoaDonDAO();
                        hoaDon_DAO.themHoaDon(hoaDon);
//                        hopDong_DAO.xoaHopDong(maHopDong);
//                        modelHopDong.removeRow(row);
                        thongBaoThanhToan.showMessage("Thông báo thanh toán thành công", String.format("Hợp đồng %s đã được thanh toán,\n Vui lòng kiểm tra trong mục quản lý hóa đơn.", maHopDong));
                    } catch (SQLException ex) {
                        Logger.getLogger(QLHopDong_GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    thongBaoThanhToan.showMessage("Thông báo thanh toán thất bại", String.format("thanh toán hợp đồng %s thất bại, \nVui lòng thao tác lại.", maHopDong));
                }
            } else {
                thongBaoThanhToan.showMessage("Thông báo chưa chọn hợp đồng", "Có vẻ bạn vẫn chưa chọn hợp đồng cần thanh toán.");
            }
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        Object o = evt.getSource();
        if (o.equals(btnTim)) {
            if (cbxTim.getSelectedItem().equals("Tất cả")) {
                try {
                    modelHopDong.getDataVector().removeAllElements();
                    loadDSHopDongLenUI();
                    tableHopDong.setModel(modelHopDong);
                } catch (SQLException ex) {
                    Logger.getLogger(QLHopDong_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    String maHopDong = (String) cbxTim.getSelectedItem();
                    for (HopDong hopDong : hopDong_DAO.getHopDongByMaHopDong(maHopDong)) {
                        modelHopDong.getDataVector().removeAllElements();
                        modelHopDong.addRow(new Object[]{
                            hopDong.getMaHopDong(), hopDong.getNgayLapString(), hopDong.getThoiHanBaoHanh(), df.format(hopDong.getSoTienPhaiTT()),
                            df.format(hopDong.getSoTienDaTT()), hopDong.getSoLanTT(), hopDong.getKhachHang().getMaKH(), hopDong.getNhanVien().getMaNV(), hopDong.getXe().getMaXe()
                        });
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(QLHopDong_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void tableHopDongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHopDongMouseClicked
        if (evt.getClickCount() == 2 && tableHopDong.getSelectedRow() != -1) {
            try {
                int row = tableHopDong.getSelectedRow();
                ChiTietHopDong chiTietHopDong = new ChiTietHopDong();

                chiTietHopDong.setMaHopDong(modelHopDong.getValueAt(row, 0).toString());
                chiTietHopDong.setNgayLap(modelHopDong.getValueAt(row, 1).toString());
                chiTietHopDong.setSoTienPhaiTT(modelHopDong.getValueAt(row, 3).toString());
                chiTietHopDong.setSoTienDaTT(modelHopDong.getValueAt(row, 4).toString());
                chiTietHopDong.setSoLanTT(modelHopDong.getValueAt(row, 5).toString());
                chiTietHopDong.setMaKH((int) modelHopDong.getValueAt(row, 6));

                int maKH = (int) modelHopDong.getValueAt(row, 6);
                String maKh = String.valueOf(maKH);
                for (KhachHang kh : new KhachHangDAO().getKhachHangByMaKH(maKh)) {
                    chiTietHopDong.setHoTenKH(kh.getHoTenKH());
                    chiTietHopDong.setSoDT(kh.getSoDT());
                    chiTietHopDong.setSoCCCD(kh.getSoCCCD());
                    chiTietHopDong.setDiaChi(kh.getDiaChi());
                }
                chiTietHopDong.setMaXe(modelHopDong.getValueAt(row, 8).toString());
                String maXe = modelHopDong.getValueAt(row, 8).toString();
                String maHopDong = modelHopDong.getValueAt(row, 0).toString();
                double giaXe = 0;
                double soTienPhaiTT = 0;
                double soTienDaTT = 0;
                for (Xe xe : new SanPhamDAO().getSanPhamXeByMaXe(maXe)) {
                    giaXe = xe.getGiaXe();
                }
                for (HopDong hopDong : hopDong_DAO.getHopDongByMaHopDong(maHopDong)) {
                    soTienPhaiTT = hopDong.getSoTienPhaiTT();
                    soTienDaTT = hopDong.getSoTienDaTT();
                }

                int soLuongMua = (int) (soTienPhaiTT / giaXe);
                double soTienConLai = soTienPhaiTT - soTienDaTT;
                chiTietHopDong.setSoTienTTConLai(new DecimalFormat().format(soTienConLai));

                if (soTienConLai == 0) {
                    chiTietHopDong.setHinhThucMuaHang("Mua trả thẳng");
                    soLuongMua += 1;
                } else {
                    chiTietHopDong.setHinhThucMuaHang("Mua trả góp");
                }
                chiTietHopDong.setSoLuongMua(soLuongMua);

                String maNV = modelHopDong.getValueAt(row, 7).toString();
                for (NhanVien nv : new NhanVienDAO().getNhanVienByMaNV(maNV)) {
                    chiTietHopDong.setTenNVLapHopDong(nv.getHoTenNV());
                }

                ChiTietHopDong_GUI frame = new ChiTietHopDong_GUI(chiTietHopDong);
                frame.setTitle("Chi tiết hợp đồng");
                frame.setResizable(false);
                frame.setLocationRelativeTo(null);
                frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                frame.setVisible(true);
                

            } catch (SQLException ex) {
                Logger.getLogger(QLHopDong_GUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_tableHopDongMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoaHopDong;
    private javax.swing.JComboBox<String> cbxTim;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblChucVu;
    private javax.swing.JLabel lblTenNhanVien;
    private javax.swing.JLabel lblTim;
    private javax.swing.JTable tableHopDong;
    // End of variables declaration//GEN-END:variables

    public void loadDSHopDongLenUI() throws SQLException {
        hopDong_DAO = new HopDongDAO();
        cbxTim.addItem("Tất cả");
        ArrayList<HopDong> dsHopDong = hopDong_DAO.getAllHopDong();
        for (HopDong hopDong : dsHopDong) {
            modelHopDong.addRow(new Object[]{
                hopDong.getMaHopDong(), hopDong.getNgayLapString(), hopDong.getThoiHanBaoHanh(), df.format(hopDong.getSoTienPhaiTT()),
                df.format(hopDong.getSoTienDaTT()), hopDong.getSoLanTT(), hopDong.getKhachHang().getMaKH(), hopDong.getNhanVien().getMaNV(), hopDong.getXe().getMaXe()
            });
            cbxTim.addItem(hopDong.getMaHopDong());
        }

    }
}
